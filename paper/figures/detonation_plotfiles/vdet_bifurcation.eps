%!PS-Adobe-2.0 EPSF-2.0
%%Title: vdet_compare.eps
%%Creator: gnuplot 4.6 patchlevel 3
%%CreationDate: Wed Sep 10 23:27:27 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 338 266
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 7.500 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {1.000 1.000 1.000} def
%
/vshift -60 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 338 50 lineto 338 266 lineto 50 266 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/StandardSymL-Oblique /StandardSymL findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (vdet_compare.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 3)
  /Author (eugene)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Sep 10 23:27:27 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(NimbusSanL-Regu) findfont 180 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 5760.00 4320.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
882 756 M
63 0 V
4490 0 R
-63 0 V
stroke
774 756 M
[ [(NimbusSanL-Regu) 180.0 0.0 true true 0 (1.08)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
882 1092 M
63 0 V
4490 0 R
-63 0 V
stroke
774 1092 M
[ [(NimbusSanL-Regu) 180.0 0.0 true true 0 (1.09)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
882 1428 M
63 0 V
4490 0 R
-63 0 V
stroke
774 1428 M
[ [(NimbusSanL-Regu) 180.0 0.0 true true 0 (1.10)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
882 1764 M
63 0 V
4490 0 R
-63 0 V
stroke
774 1764 M
[ [(NimbusSanL-Regu) 180.0 0.0 true true 0 (1.11)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
882 2100 M
63 0 V
4490 0 R
-63 0 V
stroke
774 2100 M
[ [(NimbusSanL-Regu) 180.0 0.0 true true 0 (1.12)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
882 2435 M
63 0 V
4490 0 R
-63 0 V
stroke
774 2435 M
[ [(NimbusSanL-Regu) 180.0 0.0 true true 0 (1.13)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
882 2771 M
63 0 V
4490 0 R
-63 0 V
stroke
774 2771 M
[ [(NimbusSanL-Regu) 180.0 0.0 true true 0 (1.14)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
882 3107 M
63 0 V
4490 0 R
-63 0 V
stroke
774 3107 M
[ [(NimbusSanL-Regu) 180.0 0.0 true true 0 (1.15)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
882 3443 M
63 0 V
4490 0 R
-63 0 V
stroke
774 3443 M
[ [(NimbusSanL-Regu) 180.0 0.0 true true 0 (1.16)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
882 3779 M
63 0 V
4490 0 R
-63 0 V
stroke
774 3779 M
[ [(NimbusSanL-Regu) 180.0 0.0 true true 0 (1.17)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
882 756 M
0 63 V
0 2960 R
0 -63 V
stroke
882 576 M
[ [(NimbusSanL-Regu) 180.0 0.0 true true 0 (0.00)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
973 756 M
0 31 V
0 2992 R
0 -31 V
1064 756 M
0 31 V
0 2992 R
0 -31 V
1155 756 M
0 31 V
0 2992 R
0 -31 V
1246 756 M
0 31 V
0 2992 R
0 -31 V
1337 756 M
0 31 V
0 2992 R
0 -31 V
1428 756 M
0 31 V
0 2992 R
0 -31 V
1519 756 M
0 31 V
0 2992 R
0 -31 V
1610 756 M
0 31 V
0 2992 R
0 -31 V
1702 756 M
0 31 V
0 2992 R
0 -31 V
1793 756 M
0 31 V
0 2992 R
0 -31 V
0 -2992 R
0 63 V
0 2960 R
0 -63 V
stroke
1793 576 M
[ [(NimbusSanL-Regu) 180.0 0.0 true true 0 (0.10)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1884 756 M
0 31 V
0 2992 R
0 -31 V
1975 756 M
0 31 V
0 2992 R
0 -31 V
2066 756 M
0 31 V
0 2992 R
0 -31 V
2157 756 M
0 31 V
0 2992 R
0 -31 V
2248 756 M
0 31 V
0 2992 R
0 -31 V
2339 756 M
0 31 V
0 2992 R
0 -31 V
2430 756 M
0 31 V
0 2992 R
0 -31 V
2521 756 M
0 31 V
0 2992 R
0 -31 V
2612 756 M
0 31 V
0 2992 R
0 -31 V
2703 756 M
0 31 V
0 2992 R
0 -31 V
0 -2992 R
0 63 V
0 2960 R
0 -63 V
stroke
2703 576 M
[ [(NimbusSanL-Regu) 180.0 0.0 true true 0 (0.20)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
2794 756 M
0 31 V
0 2992 R
0 -31 V
2885 756 M
0 31 V
0 2992 R
0 -31 V
2976 756 M
0 31 V
0 2992 R
0 -31 V
3067 756 M
0 31 V
0 2992 R
0 -31 V
3159 756 M
0 31 V
0 2992 R
0 -31 V
3250 756 M
0 31 V
0 2992 R
0 -31 V
3341 756 M
0 31 V
0 2992 R
0 -31 V
3432 756 M
0 31 V
0 2992 R
0 -31 V
3523 756 M
0 31 V
0 2992 R
0 -31 V
3614 756 M
0 31 V
0 2992 R
0 -31 V
0 -2992 R
0 63 V
0 2960 R
0 -63 V
stroke
3614 576 M
[ [(NimbusSanL-Regu) 180.0 0.0 true true 0 (0.30)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
3705 756 M
0 31 V
0 2992 R
0 -31 V
3796 756 M
0 31 V
0 2992 R
0 -31 V
3887 756 M
0 31 V
0 2992 R
0 -31 V
3978 756 M
0 31 V
0 2992 R
0 -31 V
4069 756 M
0 31 V
0 2992 R
0 -31 V
4160 756 M
0 31 V
0 2992 R
0 -31 V
4251 756 M
0 31 V
0 2992 R
0 -31 V
4342 756 M
0 31 V
0 2992 R
0 -31 V
4433 756 M
0 31 V
0 2992 R
0 -31 V
4524 756 M
0 31 V
0 2992 R
0 -31 V
0 -2992 R
0 63 V
0 2960 R
0 -63 V
stroke
4524 576 M
[ [(NimbusSanL-Regu) 180.0 0.0 true true 0 (0.40)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
4615 756 M
0 31 V
0 2992 R
0 -31 V
4707 756 M
0 31 V
0 2992 R
0 -31 V
4798 756 M
0 31 V
0 2992 R
0 -31 V
4889 756 M
0 31 V
0 2992 R
0 -31 V
4980 756 M
0 31 V
0 2992 R
0 -31 V
5071 756 M
0 31 V
0 2992 R
0 -31 V
5162 756 M
0 31 V
0 2992 R
0 -31 V
5253 756 M
0 31 V
0 2992 R
0 -31 V
5344 756 M
0 31 V
0 2992 R
0 -31 V
5435 756 M
0 31 V
0 2992 R
0 -31 V
0 -2992 R
0 63 V
0 2960 R
0 -63 V
stroke
5435 576 M
[ [(NimbusSanL-Regu) 180.0 0.0 true true 0 (0.50)]
] -60.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
882 3779 N
882 756 L
4553 0 V
0 3023 V
-4553 0 V
Z stroke
LCb setrgbcolor
144 2267 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(NimbusSanL-Regu) 180.0 0.0 true true 0 (Detonation Speed \(x10)]
[(NimbusSanL-Regu) 144.0 90.0 true true 0 (9)]
[(NimbusSanL-Regu) 180.0 0.0 true true 0 ( cm/s\))]
] -78.0 MCshow
grestore
LTb
LCb setrgbcolor
3158 306 M
[ [(NimbusSanL-Regu) 144.0 90.0 true true 0 (12)]
[(NimbusSanL-Regu) 180.0 0.0 true true 0 (C Mass Fraction)]
] -78.0 MCshow
LTb
3158 4049 M
[ [(NimbusSanL-Regu) 180.0 0.0 true true 0 (Minimally Overdriven Detonation Speeds)]
] -60.0 MCshow
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
1.000 UP
1.000 UL
LT0
0.16 0.50 0.10 C LCb setrgbcolor
1701 3581 M
[ [(NimbusSanL-Regu) 180.0 0.0 true true 0 (Fine Interval, X)]
[(NimbusSanL-Regu) 115.2 18.0 true true 0 (12)]
[(NimbusSanL-Regu) 144.0 -54.0 true true 0 (C)]
[(NimbusSanL-Regu) 180.0 0.0 true true 0 (=[0.12,0.16])]
] -42.0 MLshow
LT0
0.16 0.50 0.10 C 2339 1699 CircleF
2330 1693 CircleF
2321 1687 CircleF
2312 1681 CircleF
2303 1675 CircleF
2293 1670 CircleF
2284 1664 CircleF
2275 1658 CircleF
2266 1652 CircleF
2257 1646 CircleF
2248 1640 CircleF
2239 1634 CircleF
2230 1629 CircleF
2221 1622 CircleF
2211 1617 CircleF
2202 1611 CircleF
2193 1605 CircleF
2184 1648 CircleF
2175 1655 CircleF
2166 1639 CircleF
2157 1651 CircleF
2148 1816 CircleF
2139 1900 CircleF
2130 1957 CircleF
2120 2006 CircleF
2111 2044 CircleF
2102 2081 CircleF
2093 2118 CircleF
2084 2147 CircleF
2075 2176 CircleF
2066 2202 CircleF
2057 2230 CircleF
2048 2251 CircleF
2038 2277 CircleF
2029 2289 CircleF
2020 2320 CircleF
2011 2342 CircleF
2002 2363 CircleF
1993 2382 CircleF
1984 2401 CircleF
1975 2421 CircleF
1346 3581 CircleF
% End plot #1
% Begin plot #2
0.750 UP
1.000 UL
LT2
0.00 0.00 1.00 C LCb setrgbcolor
1701 3311 M
[ [(NimbusSanL-Regu) 180.0 0.0 true true 0 (Coarse Interval, X)]
[(NimbusSanL-Regu) 115.2 18.0 true true 0 (12)]
[(NimbusSanL-Regu) 144.0 -54.0 true true 0 (C)]
[(NimbusSanL-Regu) 180.0 0.0 true true 0 (=[0.05,0.5])]
] -42.0 MLshow
LT2
0.00 0.00 1.00 C 5435 3619 BoxF
5344 3564 BoxF
5253 3510 BoxF
5162 3455 BoxF
5071 3400 BoxF
4980 3345 BoxF
4889 3290 BoxF
4798 3235 BoxF
4707 3180 BoxF
4615 3124 BoxF
4524 3069 BoxF
4433 3013 BoxF
4342 2957 BoxF
4251 2902 BoxF
4160 2846 BoxF
4069 2790 BoxF
3978 2734 BoxF
3887 2677 BoxF
3796 2621 BoxF
3705 2564 BoxF
3614 2507 BoxF
3523 2451 BoxF
3432 2394 BoxF
3341 2337 BoxF
3250 2280 BoxF
3159 2222 BoxF
3067 2165 BoxF
2976 2107 BoxF
2885 2049 BoxF
2794 1991 BoxF
2703 1933 BoxF
2612 1875 BoxF
2521 1816 BoxF
2430 1758 BoxF
2339 1699 BoxF
2248 1640 BoxF
2157 1644 BoxF
2066 1522 BoxF
1975 1463 BoxF
1884 1403 BoxF
1793 1344 BoxF
1702 1284 BoxF
1610 1224 BoxF
1519 1163 BoxF
1428 1103 BoxF
1337 1043 BoxF
1346 3311 BoxF
% End plot #2
1.000 UL
LTb
LCb setrgbcolor
882 3779 N
882 756 L
4553 0 V
0 3023 V
-4553 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: NimbusSanL-Regu
